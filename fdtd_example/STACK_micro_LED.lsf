##############################################
# Script file: STACK_micro_LED.lsf
#
# Description:
#    This file will use the STACK optical 
#    solver to calculate and plot:
#        - Purcell factor
#        - angular emission 
#        - total power into the sapphire
#
# Note: the structure is based on the layer 
#       structure found in:
#        
# R. Horng, H. Chien, K. Chen, W. Tseng, Y. Tsai 
# and F. Tarntair, "Development and Fabrication 
# of AlGaInP-Based Flip-Chip Micro-LEDs," in IEEE
# Journal of the Electron Devices Society, vol. 6, 
# pp. 475-479, 2018, doi: 10.1109/JEDS.2018.2823981
#
# Copyright 2020, Ansys Inc.
##############################################

#############################################
# define wavelength/frequencies of interest
lambdamin = 550e-9;
lambdamax = 700e-9;
f = linspace(c/lambdamax,c/lambdamin,500);

#############################################
# define layer structre and material properties
d = [0; 1.2; 0.3; 0.1; 0.18; 0.15; 0.6; 0.1; 1; 1; 0]*1e-6;
n = matrix(length(d),length(f)); 
n(1,:) = getindex("GaAs - Palik",f); 
n(2,:) = getindex("AlGaInP",f); 
n(3,:) = getindex("AlInP",f); 
n(4,:) = getindex("SCL",f); 
n(5,:) = getindex("MQW",f); 
n(6,:) = getindex("SCL",f); 
n(7,:) = getindex("AlInP",f); 
n(8,:) = getindex("AlGaInP",f); 
n(9,:) = getindex("GaP",f);
n(10,:) = getindex("ITO",f);
n(11,:) = getindex("Sapphire",f);

z = sum(d(1:4))+d(5)/2; # dipole in middle of MQW layer

#############################################
# use of stackpurcell
orientation = cell(1);
orientation{1} = "rand"; # unpolarized
res = 1000; # angular resolution
result = stackpurcell(n,d,f,z,orientation,res);

# visualize stackpurcell results
plot(result.power.lambda*1e9,result.power.purcell_factor,"wavelength (nm)","Purcell factor","Purcell factor","linewidth=3");
setplot("show legend",false);
# integrate total upward power
theta = result.density.theta*pi/180;
Theta = meshgridx(theta,result.density.f);
power_up = 2*pi*integrate(sin(Theta)*pinch(result.density.upward),1,theta);
plot(result.density.lambda*1e9,power_up,"wavelength (nm)","Normalized Power","Normalized power","linewidth=3");
setplot("show legend",false);
visualize(result.density);

#############################################
# Use of stackdipole
# define uniform spectrum for comparison with FDTD
lambda = c/f;
spectrum = exp(-(lambda-630e-9)^2/(10e-9)^2);
spectrum = transpose(spectrum); # make 1xN
direction = 1; 
ef = [1];
st = [0.25];
rd = [1];
dipole = stackdipole(n,d,f,z,spectrum,orientation,res,direction,ef,st,rd);

# visualize stackdipole results
visualize(dipole);
plot(lambda*1e9,spectrum,"wavelength (nm)","spectrum", "dipole spectrum","linewidth=3");
setplot("show legend", false);
